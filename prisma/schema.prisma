// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model User {
    id        String   @id @default(cuid())
    clerkId   String   @unique
    email     String   @unique
    name      String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    transactions    Transaction[]
    categories      Category[]
    budgets         Budget[]
    savingsGoals    SavingsGoal[]
    recurringItems  RecurringItem[]

}

model Transaction {
    id              String    @id @default(cuid())
    amount          Decimal   @db.Decimal(10, 2)
    description     String
    date            DateTime
    categoryId      String
    userId          String

    isRecurring     Boolean   @default(false)
    recurringId     String?

    aiCategorized   Boolean   @default(false)
    aiConfidence    Float?
    originalDesc    String?

    createdAt       DateTime  @default(now())
    updatedAt       DateTime  @updatedAt

    user           User            @relation(fields: [userId], references: [id], onDelete: Cascade)
    category       Category        @relation(fields: [categoryId], references: [id])
    recurring      RecurringItem?  @relation(fields: [recurringId], references: [id])

    @@index([userId, date])
    @@index([categoryId])
}

model Category {
    id           String   @id @default(cuid())
    name         String
    icon         String?
    color        String
    type         CategoryType @default(EXPENSE)
    budgetLimit  Decimal? @db.Decimal(10, 2)
    userId       String

    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt

    user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
    transactions Transaction[]
    budgets      Budget[]

    @@unique([name, userId])
    @@index([userId])
}

model Budget {
    id          String   @id @default(cuid())
    categoryId  String
    month       DateTime
    limit       Decimal  @db.Decimal(10, 2)
    spent       Decimal  @db.Decimal(10, 2) @default(0)
    userId      String

    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    category    Category @relation(fields: [categoryId], references: [id])

    @@unique([categoryId, month, userId])
    @@index([userId, month])
}

model SavingsGoal {
    id            String   @id @default(cuid())
    name          String
    targetAmount  Decimal  @db.Decimal(10, 2)
    currentAmount Decimal  @db.Decimal(10, 2) @default(0)
    deadline      DateTime?
    userId        String

    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model RecurringItem {
    id           String      @id @default(cuid())
    description  String
    amount       Decimal     @db.Decimal(10, 2)
    frequency    Frequency
    startDate    DateTime
    endDate      DateTime?
    nextDue      DateTime
    categoryId   String
    userId       String

    createdAt    DateTime    @default(now())
    updatedAt    DateTime    @updatedAt

    user         User        @relation(fields: [userId], references: [id], onDelete: Cascade)
    transactions Transaction[]

    @@index([userId, nextDue])
}

enum CategoryType {
    INCOME
    EXPENSE
}

enum Frequency {
    DAILY
    WEEKLY
    BIWEEKLY
    MONTHLY
    QUARTERLY
    YEARLY
}